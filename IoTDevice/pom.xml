<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.example</groupId>
  <artifactId>IoTDevice</artifactId>
  <version>1.0-SNAPSHOT</version>

  <name>IoTDevice</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>

    <pi.host>192.168.0.104</pi.host>
    <pi.port>22</pi.port>
    <pi.user>pi</pi.user>
    <pi.password>raspberry</pi.password>
    <pi.deployDirectory>/home/pi/project</pi.deployDirectory>
    <pi.main.class>org.example.SimulatedDevice</pi.main.class>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.microsoft.azure.sdk.iot</groupId>
      <artifactId>iot-device-client</artifactId>
      <version>1.16.0</version>
    </dependency>
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>2.3.1</version>
    </dependency>
    <dependency>
      <groupId>com.pi4j</groupId>
      <artifactId>pi4j-core</artifactId>
      <version>1.2</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.10</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- This plugin will generate JAR MANIFEST file inside the JAR in order to make our applicationeasily runnable -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>3.2.0</version>
        <configuration>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
              <mainClass>${pi.main.class}</mainClass>
            </manifest>
          </archive>
          <descriptorRefs>
            <descriptorRef>jar-with-dependencies</descriptorRef>
          </descriptorRefs>
        </configuration>
        <executions>
          <execution>
            <id>make-my-jar-with-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!--This plugin will Transfer the executable JAR file to the Pi and runs it -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.8</version>
        <executions>
          <execution>
            <phase>install</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <tasks>
                <!-- create dir if not exists -->
                <sshexec host="${pi.host}" port="${pi.port}" username="${pi.user}"
                         password="${pi.password}"
                         trust="true" failonerror="false" verbose="true"
                         command="mkdir --parents ${pi.deployDirectory}"/>

                <!-- copy the JAR file raspberry -->
                <scp
                        file="${project.build.directory}/${project.build.finalName}-jar-with-dependencies.jar"
                        todir="${pi.user}:${pi.password}@${pi.host}:${pi.deployDirectory}"
                        port="${pi.port}" trust="true" verbose="true" failonerror="true">
                </scp>

                <!-- run jar on raspberry -->
                <sshexec host="${pi.host}" port="${pi.port}" username="${pi.user}"
                         password="${pi.password}" trust="true" failonerror="false"
                         verbose="true"
                         command="java -jar ${pi.deployDirectory}/${project.build.finalName}-jar-with-dependencies.jar"/>
              </tasks>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.apache.ant</groupId>
            <artifactId>ant-jsch</artifactId>
            <version>1.9.6</version>
          </dependency>
        </dependencies>
      </plugin>

    </plugins>
  </build>
</project>
